from cs1lib import *

class Soldier:
    def __init__(self, soldier_number):
        # initialize variables 
        self.soldier_number = soldier_number
        self.next_soldier = None
        self.prev_soldier = None
    
    def kill(self, prefix, suffix): # print death of soldier
        print prefix + str(self.soldier_number) + suffix
        
class Army: 
    def __init__(self, n, k):
        # initialize variables
        self.soldiers_still_alive = n
        self.number_to_advance = k
        
        for i in range(n):
            if i == 0: # for first soldier, initialize 1 person circular list
                self.current_victim = Soldier(i+1)
                self.current_victim.next_soldier = self.current_victim
                self.current_victim.prev_soldier = self.current_victim
                first_soldier = self.current_victim # save first soldier in variable
            elif i == 1: # for second soldier, initialize 2 person circular list
                self.current_victim = Soldier(i+1)
                first_soldier.next_soldier = self.current_victim
                first_soldier.prev_soldier = self.current_victim
                self.current_victim.next_soldier = first_soldier
                self.current_victim.prev_soldier = first_soldier
                previous_soldier = self.current_victim
            else: # for every soldier after that add one to the end, and connect it to the previous and next soldiers
                self.current_victim = Soldier(i+1)
                first_soldier.prev_soldier = self.current_victim
                previous_soldier.next_soldier = self.current_victim
                self.current_victim.next_soldier = first_soldier
                self.current_victim.prev_soldier = previous_soldier
                previous_soldier = self.current_victim
                
        self.current_victim = first_soldier # start killing at soldier 1
                
    def advance(self):
        i = 0
        while i < (self.number_to_advance - 1): # advance through victims sequentially until you've moved k times
            self.current_victim = self.current_victim.next_soldier
            i += 1
    
    def kill_next_victim(self):
        if self.soldiers_still_alive == 1: # designate final soldier if there's only one left
            print "The last soldier standing is: Soldier " + str(self.current_victim.soldier_number) + "."
        else:
            self.advance() # move to victim
            victim = self.current_victim
            prefix = "Soldier "
            suffix = " bites the dust."
            victim.kill(prefix, suffix) # print killing statement
        
            temp = self.current_victim.next_soldier # save the next soldier's place
            self.current_victim.next_soldier.prev_soldier = self.current_victim.prev_soldier # relink and delete murdered soldier
            self.current_victim.prev_soldier.next_soldier = self.current_victim.next_soldier
            self.current_victim = temp
        
            self.soldiers_still_alive -= 1 # decrement number of living soldiers
        
    
    def kill_all(self):
        i = 0
        soldiers_alive = self.soldiers_still_alive # save number of soldiers still alive for while loop use
        while i < soldiers_alive: # kill each soldier
            self.kill_next_victim()
            i += 1
        

def main():
    
    n = int(raw_input("Enter number n of soldiers, at least 2: ")) # get user input for n and k
    k = int(raw_input("Enter spacing k between victims, between 1 and n: "))
    army = Army(n, k)
    
    army.kill_all()
    
main()
main()
main()
